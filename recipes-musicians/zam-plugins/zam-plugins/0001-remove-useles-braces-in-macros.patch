From be9c101225336c415dd63647c67206ad3d4d7f66 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@gmail.com>
Date: Sat, 5 Jan 2019 19:44:15 +0100
Subject: [PATCH] remove useles braces in macros
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

recent complilers don't like them:

../../dpf/distrho/src/lv2/atom-util.h:334:2: note: in expansion of macro 'LV2_ATOM_OBJECT_FOREACH'
  LV2_ATOM_OBJECT_FOREACH(object, prop) {
  ^~~~~~~~~~~~~~~~~~~~~~~
../../dpf/distrho/src/lv2/atom-util.h: In function 'int lv2_atom_object_body_get(uint32_t, const LV2_Atom_Object_Body*, ...)':
../../dpf/distrho/src/lv2/atom-util.h:279:37: warning: unnecessary parentheses in declaration of 'prop' [-Wparentheses]
  for (const LV2_Atom_Property_Body* (iter) = lv2_atom_object_begin(body); \
                                     ^
../../dpf/distrho/src/lv2/atom-util.h:367:2: note: in expansion of macro 'LV2_ATOM_OBJECT_BODY_FOREACH'
  LV2_ATOM_OBJECT_BODY_FOREACH(body, size, prop) {
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../dpf/distrho/src/lv2/atom-util.h: In function 'int lv2_atom_object_get(const LV2_Atom_Object*, ...)':
../../dpf/distrho/src/lv2/atom-util.h:273:37: warning: unnecessary parentheses in declaration of 'prop' [-Wparentheses]
  for (const LV2_Atom_Property_Body* (iter) = lv2_atom_object_begin(&(obj)->body); \
                                     ^

Sent/applied @ DPF [1]

[1] https://github.com/DISTRHO/DPF/pull/98

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@gmail.com>
---
 dpf/distrho/src/lv2/atom-util.h | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/dpf/distrho/src/lv2/atom-util.h b/dpf/distrho/src/lv2/atom-util.h
index c47c0f6..1353687 100644
--- a/dpf/distrho/src/lv2/atom-util.h
+++ b/dpf/distrho/src/lv2/atom-util.h
@@ -270,13 +270,13 @@ lv2_atom_object_next(const LV2_Atom_Property_Body* i)
    @endcode
 */
 #define LV2_ATOM_OBJECT_FOREACH(obj, iter) \
-	for (const LV2_Atom_Property_Body* (iter) = lv2_atom_object_begin(&(obj)->body); \
+	for (const LV2_Atom_Property_Body* iter = lv2_atom_object_begin(&(obj)->body); \
 	     !lv2_atom_object_is_end(&(obj)->body, (obj)->atom.size, (iter)); \
 	     (iter) = lv2_atom_object_next(iter))
 
 /** Like LV2_ATOM_OBJECT_FOREACH but for a headerless object body. */
 #define LV2_ATOM_OBJECT_BODY_FOREACH(body, size, iter) \
-	for (const LV2_Atom_Property_Body* (iter) = lv2_atom_object_begin(body); \
+	for (const LV2_Atom_Property_Body* iter = lv2_atom_object_begin(body); \
 	     !lv2_atom_object_is_end(body, size, (iter)); \
 	     (iter) = lv2_atom_object_next(iter))
 
-- 
2.20.1

