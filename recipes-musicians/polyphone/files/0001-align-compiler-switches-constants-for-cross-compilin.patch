From 0c780e129ca63304eb5602496f070c5d66b2ef0a Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@gmail.com>
Date: Fri, 28 Dec 2018 23:12:22 +0100
Subject: [PATCH] align compiler switches / constants for cross compiling on
 various machines

Upstream-Status: Pending

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@gmail.com>
---
 lib/sfarklib/sfklCoding.cpp |  4 ++--
 lib/sfarklib/sfklCrunch.cpp |  2 +-
 lib/sfarklib/wcc.h          |  6 ------
 polyphone.pro               | 10 +---------
 4 files changed, 4 insertions(+), 18 deletions(-)

diff --git a/lib/sfarklib/sfklCoding.cpp b/lib/sfarklib/sfklCoding.cpp
index ff69a54a..727ed3cd 100644
--- a/lib/sfarklib/sfklCoding.cpp
+++ b/lib/sfarklib/sfklCoding.cpp
@@ -230,7 +230,7 @@ int ReadHeader(V2_FILEHEADER *FileHeader, BYTE *fbuf, int bufsize)
         HeaderLen = V2_FILEHEADER_SIZE - sizeof(FileHeader->FileName) + strlen(FileHeader->FileName) + 1;
 
         // If we get this far, there's a good chance we've got the header...
-#ifdef	__BIG_ENDIAN__
+#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
         // FixEndians of all multi-byte integers (currently only relevent to Mac)
 #define FIXENDIAN(field)	FixEndian(&(FileHeader->field), sizeof(FileHeader->field))
         FIXENDIAN(Flags); 	FIXENDIAN(OriginalSize); 	FIXENDIAN(CompressedSize);
@@ -844,7 +844,7 @@ int Decode(const char *InFileName, const char *ReqOutFileName)
 // Adjust integer held at *num for this machine's endian system
 void FixEndian(void *num, int nsize)
 {
-#ifdef	__BIG_ENDIAN__
+#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
     int i;
     BYTE bb[4];
     for (i = 0; i < nsize; i++)  bb[i] = ((BYTE *) num)[i];
diff --git a/lib/sfarklib/sfklCrunch.cpp b/lib/sfarklib/sfklCrunch.cpp
index 6b91da36..6a82c579 100644
--- a/lib/sfarklib/sfklCrunch.cpp
+++ b/lib/sfarklib/sfklCrunch.cpp
@@ -72,7 +72,7 @@ static BYTE nb[1 << (AWORD_BITS-1)]; // Array to hold number of bits needed to r
   bioBits = LOWBITS(bioBits, bioRemBits)		
   
 // =========================================================================
-#ifdef	__BIG_ENDIAN__
+#if __BYTE_ORDER__ == __ORDER_BIG_ENDIAN__
 
 #define	WFIX(I)		s = bp[I+0]; bp[I+0] = bp[I+1]; bp[I+1] = s;
 // Read from disk if needed, and fix endians
diff --git a/lib/sfarklib/wcc.h b/lib/sfarklib/wcc.h
index 7330cb2a..2d80ae38 100644
--- a/lib/sfarklib/wcc.h
+++ b/lib/sfarklib/wcc.h
@@ -17,12 +17,6 @@
 // You should have received a copy of the GNU General Public License
 // along with sfArkLib.  If not, see <http://www.gnu.org/licenses/>.
 
-#ifndef	__BIG_ENDIAN__
-#ifndef __LITTLE_ENDIAN__
-#error ENDIAN system undefined
-#endif
-#endif
-
 #include	"sfArkLib.h"
 
 // ------------------------------------------------------------------------------------
diff --git a/polyphone.pro b/polyphone.pro
index 2dc4d52e..3ac0f861 100644
--- a/polyphone.pro
+++ b/polyphone.pro
@@ -968,13 +968,5 @@ macx {
 ExtraCompiler.input = SPECIAL_SOURCES
 ExtraCompiler.variable_out = OBJECTS
 ExtraCompiler.output = ${QMAKE_VAR_OBJECTS_DIR}${QMAKE_FILE_IN_BASE}$${QMAKE_EXT_OBJ}
-win32 {
-    ExtraCompiler.commands = $${QMAKE_CXX} -D__LITTLE_ENDIAN__ -MD -arch:IA32 -D_CRT_SECURE_NO_WARNINGS $(INCPATH) -c ${QMAKE_FILE_IN} -Fo${QMAKE_FILE_OUT}
-}
-macx {
-    ExtraCompiler.commands = $${QMAKE_CXX} $(CXXFLAGS) -D__LITTLE_ENDIAN__ -mno-sse -mfpmath=387 $(INCPATH) -c ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-}
-unix:!macx {
-    ExtraCompiler.commands = $${QMAKE_CXX} $(CXXFLAGS) -fPIC -D__LITTLE_ENDIAN__ -mfpmath=387 $(INCPATH) -c ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
-}
+ExtraCompiler.commands = $${QMAKE_CXX} $(CXXFLAGS) -fPIC $(INCPATH) -c ${QMAKE_FILE_IN} -o ${QMAKE_FILE_OUT}
 QMAKE_EXTRA_COMPILERS += ExtraCompiler
-- 
2.21.3

