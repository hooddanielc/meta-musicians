From 42fa0e7e4ce43def9c34af83bfff22950f00b711 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Andreas=20M=C3=BCller?= <schnitzeltony@gmail.com>
Date: Sat, 24 Nov 2018 16:30:08 +0100
Subject: [PATCH] find native qt build tools by configure options - auto
 detection does not work
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Upstream-Status: Inappropriate [cross specific]

Signed-off-by: Andreas MÃ¼ller <schnitzeltony@gmail.com>

---
 configure.ac | 43 ++++++++++++++++---------------------------
 1 file changed, 16 insertions(+), 27 deletions(-)

diff --git a/configure.ac b/configure.ac
index 4713f05..a8317f9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -285,23 +285,11 @@ if test -x $ac_qtchooser; then
    export QT_SELECT=5
 fi
 
-# Check for proper qmake path/version alternatives.
-AC_PATH_TOOL(ac_qmake, qmake, [no], $ac_path)
-if test "x$ac_qmake" = "xno"; then
-   AC_PATH_TOOL(ac_cv_qmake, qmake-qt5, [no], $ac_path)
-   ac_qmake=$ac_cv_qmake
-fi
-if test "x$ac_qmake" = "xno"; then
-   AC_PATH_TOOL(ac_cv_qmake, qmake-qt6, [no], $ac_path)
-   ac_qmake=$ac_cv_qmake
-fi
+AC_ARG_WITH(qmake,
+  AC_HELP_STRING([--with-qmake=PATH], [use alternate qmake path]),
+  [ac_qmake="$withval"], [ac_qmake="no"])
 
-# Check for proper Qt major version.
-AC_CACHE_CHECK([for Qt major version], [ac_cv_qt_version_major], [
-   ac_cv_qt_version_major=$($ac_qmake -query QT_VERSION | cut -d'.' -f1)
-   ac_cv_qt_version_major=$(($ac_cv_qt_version_major + 0))
-])
-ac_qt_version_major=$ac_cv_qt_version_major
+ac_qt_version_major=5
 if test "x$ac_qmake" = "xno"; then
    if test $ac_qt_version_major -lt 6; then
       AC_MSG_ERROR([qmake-qt5 $ac_errmsg (qt5-devel)])
@@ -319,13 +307,6 @@ if test -d $ac_qt_install_path; then
    ac_path="$ac_qt_install_path:$ac_path"
 fi
 
-# Check it again, now with updated PATH, just in case...
-AC_PATH_TOOL(ac_cv_qmake, qmake, [no], $ac_path)
-ac_qmake=$ac_cv_qmake
-if test "x$ac_qmake" = "xno"; then
-   AC_MSG_ERROR([qmake $ac_errmsg])
-fi
-
 AC_SUBST(ac_qmake)
 
 AC_CACHE_CHECK([for Qt install headers], [ac_cv_qt_install_headers], [
@@ -361,14 +342,18 @@ AC_CACHE_CHECK([for Qt library version >= 5.1],
 ])
 
 # Check for Qt moc utility.
-AC_PATH_TOOL(ac_moc, moc, [no], $ac_path)
+AC_ARG_WITH(moc,
+  AC_HELP_STRING([--with-moc=PATH], [use alternate moc path]),
+  [ac_moc="$withval"], [ac_moc="no"])
 if test "x$ac_moc" = "xno"; then
    AC_MSG_ERROR([moc $ac_errmsg])
 fi
 AC_SUBST(ac_moc)
 
 # Check for Qt uic utility.
-AC_PATH_TOOL(ac_uic, uic, [no], $ac_path)
+AC_ARG_WITH(uic,
+  AC_HELP_STRING([--with-uic=PATH], [use alternate uic path]),
+  [ac_uic="$withval"], [ac_uic="no"])
 if test "x$ac_uic" = "xno"; then
    AC_MSG_ERROR([uic $ac_errmsg])
 fi
@@ -376,7 +361,9 @@ AC_SUBST(ac_uic)
 
 
 # Check for Qt lupdate utility.
-AC_PATH_TOOL(ac_lupdate, lupdate, [no], $ac_path)
+AC_ARG_WITH(lupdate,
+  AC_HELP_STRING([--with-lupdate=PATH], [use alternate lupdate path]),
+  [ac_lupdate="$withval"], [ac_lupdate="no"])
 if test "x$ac_lupdate" = "xno"; then
    if test $ac_qt_version_major -lt 6; then
       AC_PATH_TOOL(ac_cv_lupdate, lupdate-qt5, [no], $ac_path)
@@ -396,7 +383,9 @@ fi
 AC_SUBST(ac_lupdate)
 
 # Check for Qt lrelease utility.
-AC_PATH_TOOL(ac_lrelease, lrelease, [no], $ac_path)
+AC_ARG_WITH(lrelease,
+  AC_HELP_STRING([--with-lrelease=PATH], [use alternate lrelease path]),
+  [ac_lrelease="$withval"], [ac_lrelease="no"])
 if test "x$ac_lrelease" = "xno"; then
    if test $ac_qt_version_major -lt 6; then
       AC_PATH_TOOL(ac_cv_lrelease, lrelease-qt5, [no], $ac_path)
-- 
2.26.2
